{"version":3,"names":["ToastPosition","isFunction","valOrFunction","resolveValue","arg"],"sources":["types.ts"],"sourcesContent":["import type { TextStyle, ViewStyle } from 'react-native';\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank';\nexport enum ToastPosition {\n  TOP = 1,\n  BOTTOM = 2,\n}\n\nexport type Element = JSX.Element | string | null;\n\nexport interface IconTheme {\n  primary: string;\n  secondary: string;\n}\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> =\n  | TValue\n  | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> =>\n  typeof valOrFunction === 'function';\n\nexport const resolveValue = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>,\n  arg: TArg\n): TValue => (isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction);\n\nexport interface Toast {\n  type: ToastType;\n  id: string;\n  message: ValueOrFunction<Element, Toast>;\n  icon?: Element;\n  duration?: number;\n  pauseDuration: number;\n  position?: ToastPosition;\n  disableShadow?: boolean;\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n  width?: number;\n  styles?: {\n    pressable?: ViewStyle;\n    view?: ViewStyle;\n    text?: TextStyle;\n    indicator?: ViewStyle;\n  };\n  customToast?: (toast: Toast) => JSX.Element;\n  providerKey: string;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'position'\n    | 'styles'\n    | 'height'\n    | 'width'\n    | 'customToast'\n    | 'disableShadow'\n    | 'providerKey'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions & {\n  [key in ToastType]?: ToastOptions;\n};\n\nexport interface ToasterProps {\n  position?: ToastPosition;\n  toastOptions?: DefaultToastOptions;\n  reverseOrder?: boolean;\n  gutter?: number;\n  containerStyle?: React.CSSProperties;\n  containerClassName?: string;\n  children?: (toast: Toast) => JSX.Element;\n}\n"],"mappings":"AAGA,WAAYA,aAAZ;;WAAYA,a;EAAAA,a,CAAAA,a;EAAAA,a,CAAAA,a;GAAAA,a,KAAAA,a;;AAiBZ,MAAMC,UAAU,GACdC,aADiB,IAGjB,OAAOA,aAAP,KAAyB,UAH3B;;AAKA,OAAO,MAAMC,YAAY,GAAG,CAC1BD,aAD0B,EAE1BE,GAF0B,KAGdH,UAAU,CAACC,aAAD,CAAV,GAA4BA,aAAa,CAACE,GAAD,CAAzC,GAAiDF,aAHxD"}