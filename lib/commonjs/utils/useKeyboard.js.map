{"version":3,"names":["emptyCoordinates","Object","freeze","screenX","screenY","width","height","initialValue","start","end","useKeyboard","shown","setShown","useState","coordinates","setCoordinates","keyboardHeight","setKeyboardHeight","handleKeyboardDidShow","e","startCoordinates","endCoordinates","handleKeyboardDidHide","useEffect","subscriptions","Keyboard","addListener","forEach","subscription","remove","keyboardShown"],"sources":["useKeyboard.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Keyboard, KeyboardEventListener, KeyboardMetrics } from 'react-native';\n\n/**\n * Get keyboard status, height, and coordinates\n */\nconst emptyCoordinates = Object.freeze({\n  screenX: 0,\n  screenY: 0,\n  width: 0,\n  height: 0,\n});\nconst initialValue = {\n  start: emptyCoordinates,\n  end: emptyCoordinates,\n};\n\nexport function useKeyboard() {\n  const [shown, setShown] = useState(false);\n  const [coordinates, setCoordinates] = useState<{\n    start: undefined | KeyboardMetrics;\n    end: KeyboardMetrics;\n  }>(initialValue);\n  const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n\n  const handleKeyboardDidShow: KeyboardEventListener = (e) => {\n    setShown(true);\n    setCoordinates({ start: e.startCoordinates, end: e.endCoordinates });\n    setKeyboardHeight(e.endCoordinates.height);\n  };\n\n  const handleKeyboardDidHide: KeyboardEventListener = (e) => {\n    setShown(false);\n    if (e) {\n      setCoordinates({ start: e.startCoordinates, end: e.endCoordinates });\n    } else {\n      setCoordinates(initialValue);\n      setKeyboardHeight(0);\n    }\n  };\n\n  useEffect(() => {\n    const subscriptions = [\n      Keyboard.addListener('keyboardWillShow', handleKeyboardDidShow),\n      Keyboard.addListener('keyboardDidShow', handleKeyboardDidShow),\n      Keyboard.addListener('keyboardWillHide', handleKeyboardDidHide),\n      Keyboard.addListener('keyboardDidHide', handleKeyboardDidHide),\n    ];\n\n    return () => {\n      subscriptions.forEach((subscription) => subscription.remove());\n    };\n  }, []);\n  return {\n    keyboardShown: shown,\n    coordinates,\n    keyboardHeight,\n  };\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc;EACrCC,OAAO,EAAE,CAD4B;EAErCC,OAAO,EAAE,CAF4B;EAGrCC,KAAK,EAAE,CAH8B;EAIrCC,MAAM,EAAE;AAJ6B,CAAd,CAAzB;AAMA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAER,gBADY;EAEnBS,GAAG,EAAET;AAFc,CAArB;;AAKO,SAASU,WAAT,GAAuB;EAC5B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,IAAAC,eAAA,EAAS,KAAT,CAA1B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,IAAAF,eAAA,EAGnCN,YAHmC,CAAtC;EAIA,MAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsC,IAAAJ,eAAA,EAAiB,CAAjB,CAA5C;;EAEA,MAAMK,qBAA4C,GAAIC,CAAD,IAAO;IAC1DP,QAAQ,CAAC,IAAD,CAAR;IACAG,cAAc,CAAC;MAAEP,KAAK,EAAEW,CAAC,CAACC,gBAAX;MAA6BX,GAAG,EAAEU,CAAC,CAACE;IAApC,CAAD,CAAd;IACAJ,iBAAiB,CAACE,CAAC,CAACE,cAAF,CAAiBf,MAAlB,CAAjB;EACD,CAJD;;EAMA,MAAMgB,qBAA4C,GAAIH,CAAD,IAAO;IAC1DP,QAAQ,CAAC,KAAD,CAAR;;IACA,IAAIO,CAAJ,EAAO;MACLJ,cAAc,CAAC;QAAEP,KAAK,EAAEW,CAAC,CAACC,gBAAX;QAA6BX,GAAG,EAAEU,CAAC,CAACE;MAApC,CAAD,CAAd;IACD,CAFD,MAEO;MACLN,cAAc,CAACR,YAAD,CAAd;MACAU,iBAAiB,CAAC,CAAD,CAAjB;IACD;EACF,CARD;;EAUA,IAAAM,gBAAA,EAAU,MAAM;IACd,MAAMC,aAAa,GAAG,CACpBC,qBAAA,CAASC,WAAT,CAAqB,kBAArB,EAAyCR,qBAAzC,CADoB,EAEpBO,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwCR,qBAAxC,CAFoB,EAGpBO,qBAAA,CAASC,WAAT,CAAqB,kBAArB,EAAyCJ,qBAAzC,CAHoB,EAIpBG,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwCJ,qBAAxC,CAJoB,CAAtB;IAOA,OAAO,MAAM;MACXE,aAAa,CAACG,OAAd,CAAuBC,YAAD,IAAkBA,YAAY,CAACC,MAAb,EAAxC;IACD,CAFD;EAGD,CAXD,EAWG,EAXH;EAYA,OAAO;IACLC,aAAa,EAAEnB,KADV;IAELG,WAFK;IAGLE;EAHK,CAAP;AAKD"}