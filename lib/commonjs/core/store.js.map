{"version":3,"names":["TOAST_LIMIT","ActionType","toastTimeouts","Map","addToRemoveQueue","toastId","has","timeout","setTimeout","delete","dispatch","type","REMOVE_TOAST","set","clearFromRemoveQueue","get","clearTimeout","reducer","state","action","ADD_TOAST","toasts","toast","slice","UPDATE_TOAST","id","map","t","UPSERT_TOAST","find","DISMISS_TOAST","forEach","undefined","visible","filter","START_PAUSE","pausedAt","time","END_PAUSE","diff","pauseDuration","listeners","memoryState","listener","defaultTimeouts","blank","error","success","loading","Infinity","useStore","toastOptions","setState","useState","useEffect","push","index","indexOf","splice","mergedToasts","providerKey","duration","styles"],"sources":["store.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport type { DefaultToastOptions, Toast, ToastType } from './types';\n\nconst TOAST_LIMIT = 20;\n\nexport enum ActionType {\n  ADD_TOAST,\n  UPDATE_TOAST,\n  UPSERT_TOAST,\n  DISMISS_TOAST,\n  REMOVE_TOAST,\n  START_PAUSE,\n  END_PAUSE,\n}\n\ntype Action =\n  | {\n      type: ActionType.ADD_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPSERT_TOAST;\n      toast: Toast;\n    }\n  | {\n      type: ActionType.UPDATE_TOAST;\n      toast: Partial<Toast>;\n    }\n  | {\n      type: ActionType.DISMISS_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.REMOVE_TOAST;\n      toastId?: string;\n    }\n  | {\n      type: ActionType.START_PAUSE;\n      time: number;\n    }\n  | {\n      type: ActionType.END_PAUSE;\n      time: number;\n    };\n\ninterface State {\n  toasts: Toast[];\n  pausedAt: number | undefined;\n}\n\nconst toastTimeouts = new Map<Toast['id'], ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: ActionType.REMOVE_TOAST,\n      toastId: toastId,\n    });\n  }, 1000);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nconst clearFromRemoveQueue = (toastId: string) => {\n  const timeout = toastTimeouts.get(toastId);\n  if (timeout) {\n    clearTimeout(timeout);\n  }\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case ActionType.ADD_TOAST:\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case ActionType.UPDATE_TOAST:\n      //  ! Side effects !\n      if (action.toast.id) {\n        clearFromRemoveQueue(action.toast.id);\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case ActionType.UPSERT_TOAST:\n      const { toast } = action;\n      return state.toasts.find((t) => t.id === toast.id)\n        ? reducer(state, { type: ActionType.UPDATE_TOAST, toast })\n        : reducer(state, { type: ActionType.ADD_TOAST, toast });\n\n    case ActionType.DISMISS_TOAST:\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be execrated into a dismissToast() action, but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                visible: false,\n              }\n            : t\n        ),\n      };\n    case ActionType.REMOVE_TOAST:\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n\n    case ActionType.START_PAUSE:\n      return {\n        ...state,\n        pausedAt: action.time,\n      };\n\n    case ActionType.END_PAUSE:\n      const diff = action.time - (state.pausedAt || 0);\n\n      return {\n        ...state,\n        pausedAt: undefined,\n        toasts: state.toasts.map((t) => ({\n          ...t,\n          pauseDuration: t.pauseDuration + diff,\n        })),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [], pausedAt: undefined };\n\nexport const dispatch = (action: Action) => {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n};\n\nconst defaultTimeouts: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 2000,\n  loading: Infinity,\n};\n\nexport const useStore = (toastOptions: DefaultToastOptions = {}): State => {\n  const [state, setState] = useState<State>(memoryState);\n  useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  const mergedToasts = state.toasts\n    .filter(\n      (t) =>\n        toastOptions?.providerKey === undefined ||\n        t.providerKey === toastOptions?.providerKey ||\n        t.providerKey === 'PERSISTS'\n    )\n    .map((t) => ({\n      ...toastOptions,\n      ...toastOptions[t.type],\n      ...t,\n      duration:\n        t.duration ||\n        toastOptions[t.type]?.duration ||\n        toastOptions?.duration ||\n        defaultTimeouts[t.type],\n      styles: {\n        ...toastOptions.styles,\n      },\n    }));\n\n  return {\n    ...state,\n    toasts: mergedToasts,\n  };\n};\n"],"mappings":"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"}